树(tree)的定义：
树是n(n>=0)个节点的有限值。当n=0时，称为空树。在任意一个非空树中，有以下特点：
（1）有且仅有一个特定的称为根的节点。
（2）当n>1时，其余节点可分为m(m>0)个互不相交的有限集，每一个有限集又是一个树，并称为根的子树。

二叉树：
二叉树是树 的一种特殊形式。这种树的每个节点最多有两个孩子节点。一个称为左孩子节点，一个称为右孩子节点。

满二叉树：
一个二叉树的所有非叶子节点都存在左右孩子节点，并且所有叶子节点都在同一级上。

完成二叉树：
若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h 层所有的结点都连续集中在最左边，这就是完全二叉树。
(1)所有的叶结点都出现在第k层或k-l层（层次最大的两层）
(2)对任一结点，如果其右子树的最大层次为L，则其左子树的最大层次为L或L+l。


查找二叉树/二叉排序树
（1）若左子树不为空，则左子树上所有节点的值均小于根节点的值
（2）若右子树不为空，则右子树上所有节点的值均大于根节点的值
（3）左右子树也都是查找二叉树/二叉排序树。

================================================================================
树的遍历：
从节点间位置关系的角度来看，二叉树的遍历分为4种。
（1）前序遍历。输出顺序是根节点、左子树、右子树
（2）中序遍历。输出顺序是左子树、根节点、右子树
（3）后序遍历。输出顺序是左子树、右子树、根节点
（4）层次遍历。按照从根节点到叶子节点的层次关系，一层一层横向遍历各个节点
从更宏观的角度来看，二叉树的遍历归结为两类。
（1）深度优先遍历（前序、中序、后序遍历）
（2）广度优先遍历（层次遍历）

例：
              1
            /    \
          2       3
         /  \      \
        4    5      6

前序：1-2-4-5-3-6
中序：4-2-5-1-3-6
后续：4-5-2-6-3-1
层次：1-2-3-4-5-6

================================================================================
二叉堆：
二叉堆是一种特殊的完全二叉树，分为最大堆和最小堆。
最大堆：任何一个父节点的值，都大于或等于它左、右孩子节点的值。
最小堆：任何一个父节点的值，都小于或等于它左、右孩子节点的值。

================================================================================
优先队列：
优先队列分为最大优先队列和最小优先队列。
最大优先队列：无论入队顺序如何，当前最大的元素都会优先出队，这是基于最大堆实现的。
最小优先队列：无论入队顺序如何，当前最小的元素都会优先出队，这是基于最小堆实现的。

